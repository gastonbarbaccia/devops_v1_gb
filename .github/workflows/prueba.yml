name: Prueba pipeline

on:
  push:
    branches:
      - main
      - develop


#jobs:
#  saludo1:
#    name: Job de saludo 1
#    runs-on: ubuntu-latest
#    steps:
#      - name: primer saludo
#        run: echo "Hola mundo 1"
#      - name: segundo saludo
#        run: echo "Hola mundo 2"
#      - name: tercer saludo
#        run: echo "Hola mundo 3"
  
#  saludo2:
#    name: Job de saludo 2
#    runs-on: ubuntu-latest
#    needs: ["saludo1"]
#    steps:
#      - name: primer saludo
#        run: echo "Hola mundo 1"
#      - name: segundo saludo
#        run: echo "Hola mundo 2"
#      - name: tercer saludo
#        run: echo "Hola mundo 3"

#------------------------------------------------------------------

#jobs:
#  build:
#    name: Compilacion
#    runs-on: ubuntu-latest
#    steps:
#      - name: Compilando el codigo
#        run: echo "El codigo se esta compilando"
  
#  test:
#    name: Testing
#    runs-on: ubuntu-latest
#    needs: ["build"]
#    steps:
#      - name: Ejecucion de pruebas
#        run: echo "Se estan ejecutando pruebas unitarias"
  
#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    needs: ["test"]
#    steps:
#      - name: Preparando despliegue
#        run: echo "Preparando codigo para despliegue"

#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: ["release"]
#    steps:
#      - name: Despligue a dev
#        run: echo "Desplegando codigo a ambiente de desarrollo"


jobs:
  dependency_check:
    name: Dependency check Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Depcheck
        uses: dependency-check/Dependency-Check_Action@main
        id: Depcheck
        with:
          project: 'test'
          path: '.'
          format: 'HTML'    
      - name: Upload Test results
        uses: actions/upload-artifact@master
        with:
           name: Depcheck report
           path: ${{github.workspace}}/reports 
       

  gitleaks:
      name: Gitleaks
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: gastonbarbaccia/gitleaks@v2.1
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        - name: Get the output from the gitleaks step
          run: |
            echo "exitcode: ${{ steps.gitleaks.outputs.exitcode }}"
            echo "result: ${{ steps.gitleaks.outputs.result }}"
            echo "output: ${{ steps.gitleaks.outputs.output }}"
            echo "command: ${{ steps.gitleaks.outputs.command }}"
            echo "report: ${{ steps.gitleaks.outputs.report }}"
        - name: Upload SARIF report
          if: steps.gitleaks.outputs.exitcode == 1
          uses: github/codeql-action/upload-sarif@v2
          with:
            sarif_file: ${{ steps.gitleaks.outputs.report }} 

  build:
    name: Compilacion
    runs-on: ubuntu-latest
    needs: ["dependency_check","gitleaks"]
    steps:
      - name: Compilando el codigo
        run: echo "El codigo se esta compilando"